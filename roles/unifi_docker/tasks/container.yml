---
- name: Ensure mongodb container is up
  community.docker.docker_container:
    name: mongodb
    image: mongo:4.4.26-rc0
    state: started
    tty: true
    volumes:
      - /opt/unifi/data:/data/db
      - /opt/unifi/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    privileged: false
    ports:
      - 8081:8081
      - 27017:27017
    pull: true
    restart_policy: unless-stopped
    env:
      # TZ: US/Eastern
      # MONGO_INITDB_DATABASE: "{{ MONGO_DBNAME }}"
      # MONGO_INITDB_ROOT_USERNAME: "{{MONGO_USER }}"
      # MONGO_INITDB_ROOT_PASSWORD: "{{MONGO_PASS }}"

- name: Ensure unifi controller is up
  community.docker.docker_container:
    name: unifi-network-application
    image: lscr.io/linuxserver/unifi-network-application:latest
    state: started
    tty: true
    volumes:
      - /opt/unifi/config:/config
    privileged: false
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp # optional
      - 8843:8843 # optional
      - 8880:8880 # optional
      - 6789:6789 # optional
      - 5514:5514/udp # optional
    pull: true
    restart_policy: unless-stopped
    env:
      TZ: US/Eastern
      PUID: "1000"
      PGID: "1000"
      MONGO_USER: "{{MONGO_USER }}"
      MONGO_PASS: "{{ MONGO_PASS }}"
      MONGO_HOST: zotac
      MONGO_PORT: "27017"
      MONGO_DBNAME: "{{ MONGO_DBNAME }}"
      # MEM_LIMIT: 1024 #optional
      # MEM_STARTUP: 1024 #optional
      # MONGO_TLS: false #optional
      # MONGO_AUTHSOURCE: "" #optional
